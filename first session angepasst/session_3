
samples('github:tidalcycles/dirt-samples')
samples(
  {
    palkia: 'samples/misc/palkia.wav',
    synth: 'samples/synth/synth.wav',
    voice1: 'samples/voice/looperman-l-2687909-0346570-90s-voices.wav',
    voice2: 'samples/voice/looperman-l-3155317-0309659-savme.wav',
    bell1: 'samples/synth/synth-bell_C_minor.wav',
    pepsi: 'samples/pepsi/not_what_it_used_to_be_long.wav',
    speech: 'samples/pepsi/pepsispeech_01.wav',
    new_pepsi: 'samples/pepsi/processed/not_what_it_used_to_be_long.wav',
  }, 
  'https://raw.githubusercontent.com/alexanderreiprich/ampc/main/'
);


// s("lighter:1").gain(1).struct("1 0 1 0 1 0 1 0 1 1 1 0 1 0 1 1")
// s("lighter:1").gain(1).struct("1 ~ [1 1 1] ~ 1 1 1 1")

const drums = stack(
  s("hh27").gain(0.5).struct("[1 1 1 1]*4"),
  s("clap").gain(1).struct("[0 0 1 0]*1"),
  s("cp").gain(1).struct("[0 0 0 [~ 1]]").mask("<0 0 0 1>"),
  s("bd").gain(1).struct("[1 0 1 0] [0 0 0 [1 1 1]]").mask("<0 1>")
);


const base = stack(
  s("bd").bank("bossdr220").gain(0.3).struct("1 1 ~ [1 1 1]").mask("<0 0 1 0>"), // rausnehmen während des nicht-chorus 
  n("0 0 0 0 0 0 <2 -2> 0").scale("C#:major").s("supersaw").gain(0.5).room(0.5).crush(5).slow(1)
);

// const base = stack(
//   s("bd").bank("bossdr220").gain(0.5).struct("1 1 ~ [1 1 1]"), // rausnehmen während des nicht-chorus 
//   n("0 0 1").scale("C#:major").s("bass1").clip(1).gain(0.7).room(0.5)
// ).mask("<1 1 1 0>");


// const melodie = stack(
// "{12 1 3 10 4 5 7 6}%4".struct("1(<3, 5, 4>,8)").sometimes(x=>x.rev()).scale('c#4:major').note().sound("gm_celesta").hpf(1000).room(1).fast(1).gain(0.7).crush(7),
// );

const melodie3 = stack("{9 8 7 6 5 4}%4".struct("1(<2, 4>,8)")
                       .sometimes(x=>x.rev())
                       .scale('c#4:major')
                       .note()
                       .sound("gm_pad_bowed")
                       .hpf(5000)
                       .room(1)
                       .fast(1)
                       .gain(3)
                       .crush(7)
,
);


// const melodie2 = stack(
//   "2 [3 7] 6 5 4 5 2 [5 4]".scale('c#4:major').fast(0.5).note().sound("z_square")
//   //.room(2)
//   .arp("0 [0,2] 1 [0,2] 2 [0,2] 1 2 [0,1] 2 2 [0,2]")
//   .gain(1)
//   .crush(7)
//   .mask("<1 1 1 1 1 1 1 1 1 1 1 1 0>")
//   .ftype("24db")
//   .vowel("<o>")
//   //.adsr(".04:.3:.2:.1")
//   //.penv(12)
//   //.compressor("-8:8:8:.002:.02")
// );

const melodie2 = stack(
  "8 [9 6] 5 7 6 5 9 [5 4] 9 8 7 6 5".scale('c#4:major').fast(0.5).note().sound("gm_glockenspiel")
  //.room(2)
  .arp("0 [0,2] 1 [0,2] 2 [0,2] 1 2 [0,1] 2 2 [0,2]")
  .gain(1)
  .crush(7)
  .mask("<1 1 1 1 1 1 1 1 1 1 1 1 0>")
  .ftype("24db")
  //.vowel("<o>")
  //.adsr(".04:.3:.2:.1")
  //.penv(12)
  //.compressor("-8:8:8:.002:.02")
);

// const voice = stack(
//   s("numbers:1 numbers:0 numbers:1 numbers:0 numbers:0 numbers:0 numbers:0 numbers:0").slow(4).gain(2))


const melodie4 = stack(
  "8 7 5 4 2 1".scale('c#3:major').note().sound("gm_celesta").room(0.5).fast(2).gain(0.7).crush(7).mask("<0 0 0 0 0 0 0 0 0 0 0 0 [0 1]>"),
);

// const arp = stack(
//  "2 [3 7] 6 5 4 5 2 [5 4]".scale('c#4:major').fast(0.5).note().sound("gm_pad_bowed").gain(1).arp("0 [0,2] 1 [0,2] 2 [0,2] 1 2 [0,1] 2 2 [0,2]")
// );


const chords = stack(
  "<0 2 5 7>".scale('c#3:major').note().sound("triangle").crush(6),
);

const chords2 = stack(note(`<[0,4,7] [0,4,7] [0,4,7] [0,4,7]>`.add(`<c# e# a# c#>`)).sound("gm_synth_strings_1").crush(6).hpf(2000).gain(0.75).room(1).compressor("-10:10:10:.002:.02"));

const pepsi = stack(
   s("<new_pepsi>")
  .begin("<0 .25 .5 .75>")
  //.striate(4)
  .gain(1.5)
  .room(1.7)
  .clip("< .5 .75  1>")

  //.room(1.5)
  //.loopat(4.656)
  //.lpf("500 50000")
    //.cut(2)
   // .speed(1)
    //.lpf(400)
);

const speech = stack(
   s("<speech>")
 // .striate(4)
  .gain(1)
  //.loopat(1.4)
  .clip("< .5 .5 .5  1>")
  .room(1.7)
  .crush(5)
    //.cut(2)
   // .speed(1)
    //.lpf(400)

);


const effects = stack(
  s("<gm_gunshot>").gain(0).sometimesBy(.2, x=>x.gain(2)),
  s("<palkia>").begin(0.5).velocity(0.2).slow(4),
);

stack(
  //chords,
  //chords2,
 // melodie3,
  pepsi,
  speech,
 
 // drums,
 // base,
 // effects,
).cpm(150/4)

// "<0 2 5 7>".scale('c#2:major').note().sound("gm_electric_guitar_clean").cutoff(2000).attack(1).release(1).sustain(0).delay(0)

// const voice1 = stack(
//    s("<voice2>")
//     .gain(2)
//     .cut(2)
//     .slow(2)
//     .speed(1)
//     .lpf(400)
//     .begin(0.225)
// );
